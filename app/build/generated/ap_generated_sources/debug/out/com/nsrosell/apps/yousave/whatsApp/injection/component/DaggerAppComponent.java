// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.nsrosell.apps.yousave.whatsApp.injection.component;

import android.content.Context;
import com.nsrosell.apps.yousave.whatsApp.data.local.FileHelper;
import com.nsrosell.apps.yousave.whatsApp.injection.module.AppModule;
import com.nsrosell.apps.yousave.whatsApp.injection.module.AppModule_ProvideContextFactory;
import com.nsrosell.apps.yousave.whatsApp.injection.module.AppModule_ProvideFileHelperFactory;
import com.nsrosell.apps.yousave.whatsApp.ui.imageslider.ImageSliderActivity;
import com.nsrosell.apps.yousave.whatsApp.ui.imageslider.ImageSliderActivity_MembersInjector;
import com.nsrosell.apps.yousave.whatsApp.ui.imageslider.ImageSliderPresenter;
import com.nsrosell.apps.yousave.whatsApp.ui.imageslider.ImageSliderPresenter_Factory;
import com.nsrosell.apps.yousave.whatsApp.ui.imageslider.imagedetails.ImageDetailsFragment;
import com.nsrosell.apps.yousave.whatsApp.ui.imageslider.imagedetails.ImageDetailsFragment_MembersInjector;
import com.nsrosell.apps.yousave.whatsApp.ui.imageslider.imagedetails.ImageDetailsPresenter;
import com.nsrosell.apps.yousave.whatsApp.ui.imageslider.imagedetails.ImageDetailsPresenter_Factory;
import com.nsrosell.apps.yousave.whatsApp.ui.main.MainActivity;
import com.nsrosell.apps.yousave.whatsApp.ui.main.MainActivity_MembersInjector;
import com.nsrosell.apps.yousave.whatsApp.ui.main.MainPresenter;
import com.nsrosell.apps.yousave.whatsApp.ui.main.MainPresenter_Factory;
import com.nsrosell.apps.yousave.whatsApp.ui.main.recentscreen.RecentImageListAdapter;
import com.nsrosell.apps.yousave.whatsApp.ui.main.recentscreen.RecentImageListAdapter_Factory;
import com.nsrosell.apps.yousave.whatsApp.ui.main.recentscreen.RecentPicsFragment;
import com.nsrosell.apps.yousave.whatsApp.ui.main.recentscreen.RecentPicsFragment_MembersInjector;
import com.nsrosell.apps.yousave.whatsApp.ui.main.recentscreen.RecentPicsPresenter;
import com.nsrosell.apps.yousave.whatsApp.ui.main.recentscreen.RecentPicsPresenter_Factory;
import com.nsrosell.apps.yousave.whatsApp.ui.main.recentscreen.RecentPicsPresenter_MembersInjector;
import com.nsrosell.apps.yousave.whatsApp.ui.main.saved.SavedImageListAdapter;
import com.nsrosell.apps.yousave.whatsApp.ui.main.saved.SavedImageListAdapter_Factory;
import com.nsrosell.apps.yousave.whatsApp.ui.main.saved.SavedPicsFragment;
import com.nsrosell.apps.yousave.whatsApp.ui.main.saved.SavedPicsFragment_MembersInjector;
import com.nsrosell.apps.yousave.whatsApp.ui.main.saved.SavedPicsPresenter;
import com.nsrosell.apps.yousave.whatsApp.ui.main.saved.SavedPicsPresenter_Factory;
import com.nsrosell.apps.yousave.whatsApp.ui.main.saved.SavedPicsPresenter_MembersInjector;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import dagger.internal.MembersInjectors;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaggerAppComponent implements AppComponent {
  private Provider<MainPresenter> mainPresenterProvider;

  private MembersInjector<MainActivity> mainActivityMembersInjector;

  private Provider<Context> provideContextProvider;

  private Provider<FileHelper> provideFileHelperProvider;

  private MembersInjector<RecentPicsPresenter> recentPicsPresenterMembersInjector;

  private Provider<RecentPicsPresenter> recentPicsPresenterProvider;

  private Provider<RecentImageListAdapter> recentImageListAdapterProvider;

  private MembersInjector<RecentPicsFragment> recentPicsFragmentMembersInjector;

  private MembersInjector<SavedPicsPresenter> savedPicsPresenterMembersInjector;

  private Provider<SavedPicsPresenter> savedPicsPresenterProvider;

  private Provider<SavedImageListAdapter> savedImageListAdapterProvider;

  private MembersInjector<SavedPicsFragment> savedPicsFragmentMembersInjector;

  private Provider<ImageSliderPresenter> imageSliderPresenterProvider;

  private MembersInjector<ImageSliderActivity> imageSliderActivityMembersInjector;

  private Provider<ImageDetailsPresenter> imageDetailsPresenterProvider;

  private MembersInjector<ImageDetailsFragment> imageDetailsFragmentMembersInjector;

  private DaggerAppComponent(Builder builder) {
    assert builder != null;
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {

    this.mainPresenterProvider =
        MainPresenter_Factory.create(MembersInjectors.<MainPresenter>noOp());

    this.mainActivityMembersInjector = MainActivity_MembersInjector.create(mainPresenterProvider);

    this.provideContextProvider = AppModule_ProvideContextFactory.create(builder.appModule);

    this.provideFileHelperProvider =
        DoubleCheck.provider(
            AppModule_ProvideFileHelperFactory.create(builder.appModule, provideContextProvider));

    this.recentPicsPresenterMembersInjector =
        RecentPicsPresenter_MembersInjector.create(provideFileHelperProvider);

    this.recentPicsPresenterProvider =
        RecentPicsPresenter_Factory.create(
            recentPicsPresenterMembersInjector, provideFileHelperProvider);

    this.recentImageListAdapterProvider =
        RecentImageListAdapter_Factory.create(
            MembersInjectors.<RecentImageListAdapter>noOp(), provideContextProvider);

    this.recentPicsFragmentMembersInjector =
        RecentPicsFragment_MembersInjector.create(
            recentPicsPresenterProvider, recentImageListAdapterProvider);

    this.savedPicsPresenterMembersInjector =
        SavedPicsPresenter_MembersInjector.create(provideFileHelperProvider);

    this.savedPicsPresenterProvider =
        SavedPicsPresenter_Factory.create(
            savedPicsPresenterMembersInjector, provideFileHelperProvider);

    this.savedImageListAdapterProvider =
        SavedImageListAdapter_Factory.create(
            MembersInjectors.<SavedImageListAdapter>noOp(), provideContextProvider);

    this.savedPicsFragmentMembersInjector =
        SavedPicsFragment_MembersInjector.create(
            savedPicsPresenterProvider, savedImageListAdapterProvider);

    this.imageSliderPresenterProvider =
        ImageSliderPresenter_Factory.create(
            MembersInjectors.<ImageSliderPresenter>noOp(), provideFileHelperProvider);

    this.imageSliderActivityMembersInjector =
        ImageSliderActivity_MembersInjector.create(imageSliderPresenterProvider);

    this.imageDetailsPresenterProvider =
        ImageDetailsPresenter_Factory.create(
            MembersInjectors.<ImageDetailsPresenter>noOp(), provideFileHelperProvider);

    this.imageDetailsFragmentMembersInjector =
        ImageDetailsFragment_MembersInjector.create(imageDetailsPresenterProvider);
  }

  @Override
  public void inject(MainActivity activity) {
    mainActivityMembersInjector.injectMembers(activity);
  }

  @Override
  public void inject(RecentPicsFragment fragment) {
    recentPicsFragmentMembersInjector.injectMembers(fragment);
  }

  @Override
  public void inject(SavedPicsFragment fragment) {
    savedPicsFragmentMembersInjector.injectMembers(fragment);
  }

  @Override
  public void inject(ImageSliderActivity activity) {
    imageSliderActivityMembersInjector.injectMembers(activity);
  }

  @Override
  public void inject(ImageDetailsFragment fragment) {
    imageDetailsFragmentMembersInjector.injectMembers(fragment);
  }

  @Override
  public FileHelper fileHelper() {
    return provideFileHelperProvider.get();
  }

  public static final class Builder {
    private AppModule appModule;

    private Builder() {}

    public AppComponent build() {
      if (appModule == null) {
        throw new IllegalStateException(AppModule.class.getCanonicalName() + " must be set");
      }
      return new DaggerAppComponent(this);
    }

    public Builder appModule(AppModule appModule) {
      this.appModule = Preconditions.checkNotNull(appModule);
      return this;
    }
  }
}
